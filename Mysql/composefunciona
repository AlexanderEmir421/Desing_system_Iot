version: '3.7'

services:

  # Mosquitto        

  mosquitto:
    image: eclipse-mosquitto:1.5.5
    hostname: mosquitto
    container_name: mosquitto
    expose:
      - "1883"
    ports:
      - "1883:1883"


  # Apache Kafka   

  zookeeper:
    image: bitnami/zookeeper:3.8.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zookeeper-data:/bitnami/zookeeper

  kafka:
    image: bitnami/kafka:3.2.3
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ENABLE_KRAFT=no
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
    volumes:
      - kafka-data:/bitnami/kafka
    depends_on:
      - zookeeper
    restart: always

  
  # Conector Mqtt 

  kafka-connect:
    image: confluentinc/cp-kafka-connect:5.1.0
    hostname: kafka-connect
    container_name: kafka-connect
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: '/etc/kafka-connect/jars'
      CONNECT_CONFLUENT_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./tmp/custom/jars:/etc/kafka-connect/jars
    depends_on:
      - zookeeper
      - kafka
      - mosquitto

   # Apache Spark
  spark:
    container_name: spark-master  
    image: docker.io/bitnami/spark:3.3
    environment:
      - SPARK_MODE=master
    ports:
      - '8080:8080'
      - '4040:4040'
      - '7077:7077'
    volumes:
      - ./data:/data
      - ./src:/src
      - ./SparkCode:/spark
    command: ["bash", "-c", "spark-submit --packages org.apache.spark:spark-sql-kafka-0-10_2.12:3.3.0 /spark/consumer.py"]
    restart: always
    
  spark-worker:
    container_name: spark-worker
    image: docker.io/bitnami/spark:3.3
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark:7077
      - SPARK_WORKER_MEMORY=4G
      - SPARK_EXECUTOR_MEMORY=4G
      - SPARK_WORKER_CORES=4
    volumes:
      - ./data:/data
      - ./src:/src 
    restart: always
  # Kafka Consumer

  kafka-consumer:
    image: bitnami/kafka:3.2.3
    container_name: kafka-consumer
    command: ["/opt/bitnami/kafka/bin/kafka-console-consumer.sh", "--bootstrap-server", "kafka:9092", "--topic", "connect-custom", "--from-beginning"]
    depends_on:
      - kafka
    restart: always
  
  #    Kafka UI       
  #kafka-ui:
  #  container_name: kafka-ui
  #  image: provectuslabs/kafka-ui:latest
  #  ports:
  #    - 10000:10000
  #  environment:
  #    DYNAMIC_CONFIG_ENABLED: 'true'
  #  volumes:
  #    - ./kui/config.yml:/etc/kafkaui/dynamic_config.yaml
  #       Mysql     

  db:
      image: mysql:latest
      container_name: db
      environment:
        MYSQL_ROOT_PASSWORD: my_secret_password
        MYSQL_DATABASE: app_db
        MYSQL_USER: db_user
        MYSQL_PASSWORD: db_user_pass
      ports:
        - "6033:3306"
      volumes:
        - dbdata:/var/lib/mysql
      restart: always
  phpmyadmin:
      image: phpmyadmin/phpmyadmin
      container_name: pma
      links:
        - db
      environment:
        PMA_HOST: db
        PMA_PORT: 3306
        PMA_ARBITRARY: 1
      restart: always
      ports:
        - 8081:80

volumes:
  zookeeper-data:
  kafka-data:
  spark_data:
  dbdata: